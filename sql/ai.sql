-- 表4：创建用户订阅token记录表
create table if not exists public.nuxtbase_user_subscription_token (
    id bigint generated by default as identity not null,
    uid uuid not null,
    subscription_id bigint not null,
    total_tokens bigint not null default 0,
    used_tokens bigint not null default 0,
    created_at timestamp with time zone not null default now(),
    updated_at timestamp with time zone not null default now(),
    constraint nuxtbase_user_subscription_token_pkey primary key (id),
    constraint fk_subscription 
        foreign key (subscription_id) 
        references public.nuxtbase_user_subscription(id)
        on delete cascade,
    -- Add unique constraint for subscription_id
    constraint nuxtbase_user_subscription_token_subscription_id_key 
        unique (subscription_id)
);

-- 创建更新时间触发器
create trigger update_nuxtbase_user_subscription_token_updated_at
    before update on nuxtbase_user_subscription_token
    for each row
    execute function update_updated_at_column();

-- 启用RLS
alter table public.nuxtbase_user_subscription_token enable row level security;

-- 创建访问策略
create policy nuxtbase_user_subscription_token_policy 
    on public.nuxtbase_user_subscription_token 
    for all using (uid = auth.uid());

-- 表5：创建用户一次性购买token记录表
create table if not exists public.nuxtbase_user_onetime_token (
    id bigint generated by default as identity not null,
    uid uuid not null,
    payment_id bigint not null,
    total_tokens bigint not null,
    used_tokens bigint not null default 0,
    created_at timestamp with time zone not null default now(),
    updated_at timestamp with time zone not null default now(),
    constraint nuxtbase_user_onetime_token_pkey primary key (id),
    constraint fk_payment 
        foreign key (payment_id) 
        references public.nuxtbase_payment_history(id)
        on delete cascade
);

-- 创建更新时间触发器
create trigger update_nuxtbase_user_onetime_token_updated_at
    before update on nuxtbase_user_onetime_token
    for each row
    execute function update_updated_at_column();

-- 启用RLS
alter table public.nuxtbase_user_onetime_token enable row level security;

-- 创建访问策略
create policy nuxtbase_user_onetime_token_policy 
    on public.nuxtbase_user_onetime_token 
    for all using (uid = auth.uid());


-- 表6：创建用户token使用历史记录表
create table if not exists public.nuxtbase_user_token_history (
    id bigint generated by default as identity not null,
    uid uuid not null,
    -- 关联到订阅token或一次性token表(可以为空,因为只会关联其中一个)
    subscription_token_id bigint references public.nuxtbase_user_subscription_token(id),
    onetime_token_id bigint references public.nuxtbase_user_onetime_token(id),
    -- token使用信息
    tokens_used bigint not null,
    model text not null,
    -- 时间戳
    created_at timestamp with time zone not null default now(),
    updated_at timestamp with time zone not null default now(),
    -- 约束
    constraint nuxtbase_user_token_history_pkey primary key (id),
    -- 确保只关联一个token来源
    constraint token_source_check check (
        (subscription_token_id is not null and onetime_token_id is null) or
        (subscription_token_id is null and onetime_token_id is not null)
    )
);

-- 创建更新时间触发器
create trigger update_nuxtbase_user_token_history_updated_at
    before update on nuxtbase_user_token_history
    for each row
    execute function update_updated_at_column();

-- 启用RLS
alter table public.nuxtbase_user_token_history enable row level security;

-- 创建访问策略
create policy nuxtbase_user_token_history_policy 
    on public.nuxtbase_user_token_history 
    for all using (uid = auth.uid());